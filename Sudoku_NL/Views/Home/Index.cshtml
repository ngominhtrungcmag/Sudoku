@model Sudoku

@{
    ViewData["Title"] = "Home Page";
}
@* Chỗ này để viết sciprt JavaScript á *@
<script>
//
    $(document).ready(function () {
        BorderGird();
        if (!document.getElementById("OnSuggest").checked) {
            hiddenButton();
        }
    });

// css gird

    function BorderGird() {
        for (var i = 0; i < 9; i++) {
            document.getElementById("0_" + i).style.borderTop = "1px solid #000000";
            document.getElementById("3_" + i).style.borderTop = "1px solid #000000";
            document.getElementById("6_" + i).style.borderTop = "1px solid #000000";

            document.getElementById(i+ "_0").style.borderLeft = "1px solid #000000";
            document.getElementById(i + "_3").style.borderLeft = "1px solid #000000";
            document.getElementById(i + "_6").style.borderLeft = "1px solid #000000";

            document.getElementById(i + "_2").style.borderRight = "1px solid #000000";
            document.getElementById(i + "_5").style.borderRight = "1px solid #000000";
            document.getElementById(i + "_8").style.borderRight = "1px solid #000000";

            document.getElementById("2_" + i).style.borderBottom = "1px solid #000000";
            document.getElementById("5_" + i).style.borderBottom = "1px solid #000000";
            document.getElementById("8_" + i).style.borderBottom = "1px solid #000000";
        }
    }

 //
    function test() {
        var CellSelected = @Model.SelectedCell.Value;
        if (CellSelected != 0) {
            document.getElementById("test").innerHTML = CellSelected;
        }
    }
//

    function ResetCell() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("ResetCell", "Home")",
            success: function () {
                location.reload(true);
            }
        });
    }
//
    function FocusSelectedCell()
    {
        var id = "@Html.Raw(Model.SelectedCell.Id)";
        var cell = document.getElementById(id);
        cell.focus();
    }
//
    function hiddenButton() {
        for (var i = 1; i <= 9; i++) {
            var mybtn = document.getElementById("BtnNumber" + i);
            mybtn.type = "button";
            mybtn.disabled = true;
            mybtn.style.border = "thick solid #7a7a7a";
            mybtn.style.background = "#7a7a7a";
        }
    }

    function OnCellSelected(cell)
    {
        hiddenButton();
        var res = cell.id.split("_");
        var i = res[0];
        var j = res[1];
        var val = cell.id.value;
        document.getElementById("idSelectedCell").value = cell.id;
            $.ajax({
                type: 'GET',
                url: "@Url.Action("GetSelectedCell", "Home")",
                data: {i: i, j: j},
                success: function (msg) {
                    if (document.getElementById("OnSuggest").checked) {
                        var possible = msg.split(",");
                        possible.forEach(function (entry) {
                            //console.log("_" + entry + "_");
                            var btn = "BtnNumber" + entry;
                            //document.getElementById(btn).type = "button";
                            document.getElementById(btn).disabled = false;
                            document.getElementById(btn).style.background = "#007bff";
                        });
                    }
                    console.log("OnCellSelected on true");
                }
            });
    }
//
    function OnCellInput(cell)
        {
            var res = cell.id.split("_");
            var i = res[0];
            var j = res[1];

            var val = cell.value;
            val = val.replace(/[^\d]/, '');
            val = val.substring(0, 1);
            cell.value = val;

        if (val == "") { val = "0"; }

                $.ajax({
                    type: 'POST',
                    dataType: "text",
                    url: "@Url.Action("GetCellValue", "Home")",
                    data: { i: i, j: j, val: val },
                    success: function () {
                        //location.reload(true);
                        console.log("OnCellInput is true");
                    }
                });
    }

    function InputSuggest(val) {
        var id = document.getElementById("idSelectedCell").value;
        var res = id.split("_");
        var i = res[0];
        var j = res[1];
        document.getElementById(id).value = val;
        console.log(id);
        $.ajax({
            type: 'POST',
            dataType: "text",
            url: "@Url.Action("GetCellValue", "Home")",
            data: { i: i, j: j, val: val },
            success: function () {
            //location.reload(true);
            console.log("OnCellInput is true");
            }
        });
    }

    //
    function OnNewGameClick() {
        var difficult = 40;
        if (document.getElementById("easy").checked) difficult = 20;
        if (document.getElementById("difficult").checked) difficult = 60;
         $.ajax({
             type: 'POST',
             url: "@Url.Action("PostNewGame", "Home")",
             data: { difficult: difficult },
             success: function ()
             {
                location.reload(true);
                alert("Completed");
             }
         });
    }
    //
    function OnCheckOneCell() {
        if (@Model.SelectedCell.Value != 0) {
            console.log(@Model.SelectedCell.Value);
            $.ajax({
                type: 'GET',
                url: "@Url.Action("CheckOneCell", "Home")",
                data: {},
                success: function (msg)
                {
                    console.log("OnCellSelected on true");
                    if (msg == true) {
                        alert("Ô này đúng rồi!")
                    }
                    else {
                        alert("Ô này sai nha!");
                    }
                }
            });
        }
    }
//
    function OnSolveClick() {
        console.log("OnSolveClick Run");
        $.ajax({
                type: 'POST',
                url: "@Url.Action("PostSolve", "Home")",
                data: {},
                success: function (msg)
                {
                    location.reload(true);
                    alert(msg);
                    console.log("OnSolveClick true");
                }
        });
    }
//
    function OnCompleteClick() {
        console.log("OnCompleteClick");
        var check = true;
        for (var i = 0; i < 9; i++)
        {
            for (var j = 0; j < 9; j++)
            {
                if (document.getElementById(i + "_" + j).value == 0) {
                    check = false;
                    break;
                }
            }
        }
        if (check) {
            $.ajax({
                type: 'POST',
                url: "@Url.Action("PostComplete","Home")",
                data: {},
                success: function (msg) {
                    location.reload(true);
                    alert(msg);
                    console.log("OnCompleteClick true");
                }
            })
        }
        else {
            alert("Bạn vui lòng nhập đầy đủ các ô");
        }

    }
//
    function uploadFiles() {
        var path = document.getElementById("myfile").innerHTML;
        if (document.getElementById("myfile").files.length != 0 ) {
            var formData = new FormData();
            formData.append('file', $('#myfile')[0].files[0]); // myFile is the input type="file" control

            var _url = '@Url.Action("UploadFile", "Home")';

            $.ajax({
                url: _url,
                type: 'POST',
                data: formData,
                processData: false,  // tell jQuery not to process the data
                contentType: false,  // tell jQuery not to set contentType
                success: function () {
                    location.reload(true);
                },
                error: function (jqXHR) {
                },
                complete: function (jqXHR, status) {
                }
            });
        }
        else {
            alert("Không có file ");
        }
    }

</script>
@* Chỗ này là thân index nè *@
<div class="container">
    <h1 class="display-4 text-center">Game Sudoku</h1>

    <div class="content row">

        <div class="box1">

            @if (Model != null)
            {
                <p id="test"></p>
                <p id="PossibleString"></p>
                <table class="GameGrid">
                    @for (int i = 0; i < 9; i++)
                    {
                        var btnId = "btn" + i;
                        var btnVal = (i + 1).ToString();
                        <tr>
                            @for (int j = 0; j < 9; j++)
                            {
                                var val = Model.Cells[i, j].Value;
                                var id = i.ToString() + "_" + j.ToString();

                                if (Model.Cells[i, j].ReadOnly == true)
                                {
                                    <td class="GameCell">
                                        <input id="@id" type="number" disabled value="@val" class="GameCellText" />
                                    </td>
                                }
                                else if (val == 0)
                                {
                                    <td class="GameCell">
                                        <input id="@id" type="number" min="1" max="9" class="GameCellText" onclick="OnCellSelected(this)" oninput="OnCellInput(this)" />
                                    </td>
                                }
                                else
                                {
                                    <td class="GameCell">
                                        <input id="@id" type="number" value="@val" min="1" max="9" class="GameCellText" onclick="OnCellSelected(this)" oninput="OnCellInput(this)" />
                                    </td>
                                }
                            }

                        </tr>
                    }
                </table>

            }
            else
            {
                <p>Doan nay chung to Model null</p>
            }
        </div>

        <div class="box2">
            <div class="choose row">
                <p class="choose-text"></p>
                <div class="dropdown">
                    <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
                        Chọn độ khó
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu">
                        <li>
                            <input class="form-check-input" type="radio" id="easy" value="">
                            <label class="form-check-label" for="easy">Dễ</label>
                        </li>
                        <li>
                            <input class="form-check-input" type="radio" id="medium" value="">
                            <label class="form-check-label" for="medium">Trung bình</label>
                        </li>
                        <li>
                            <input class="form-check-input" type="radio" id="difficult" value="">
                            <label class="form-check-label" for="difficult">Khó</label>
                        </li>
                    </ul>
                </div>
                <input id="BtnNewGame" class="btn btn-primary newgame" type="button" value="New Game" onclick="OnNewGameClick()" />
            </div>

            <div class="choose row">
                <input type="file" id="myfile" class="btn file-input" />
                <button type="button" value="Load Game" class="btn btn-info" onclick="uploadFiles()">Load game</button>
            </div>

            <div class="choose row">
                <input id="BtnSolve" class="btn btn-primary" type="button" value="Solve" onclick="OnSolveClick()" />
                <input id="BtnComplete" class="btn btn-primary" type="button" value="Complete" onclick="OnCompleteClick()" />
                <input id="BtnCheckOneCell" class="btn btn-primary" type="button" value="Check One Cell" onclick="OnCheckOneCell()" />
                <input id="BtnReset" class="btn btn-primary" type="button" value="Reset Cells" onclick="ResetCell()" />
            </div>

            <div class="choose row">
                <!-- Material unchecked -->
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="OnSuggest">
                    <label class="form-check-label" for="OnSuggest">Gợi ý</label>
                </div>
                <br />
                <input type="hidden" id="idSelectedCell" value=""/>
                <input type="hidden" class="btn btn-info Btn-Number" id="BtnNumber1" value="1" onclick="InputSuggest(1)" />
                <input type="hidden" class="btn btn-info Btn-Number" id="BtnNumber2" value="2" onclick="InputSuggest(2)"/>
                <input type="hidden" class="btn btn-info Btn-Number" id="BtnNumber3" value="3" onclick="InputSuggest(3)"/>
                <input type="hidden" class="btn btn-info Btn-Number" id="BtnNumber4" value="4" onclick="InputSuggest(4)"/>
                <input type="hidden" class="btn btn-info Btn-Number" id="BtnNumber5" value="5" onclick="InputSuggest(5)"/>
                <input type="hidden" class="btn btn-info Btn-Number" id="BtnNumber6" value="6" onclick="InputSuggest(6)"/>
                <input type="hidden" class="btn btn-info Btn-Number" id="BtnNumber7" value="7" onclick="InputSuggest(7)"/>
                <input type="hidden" class="btn btn-info Btn-Number" id="BtnNumber8" value="8" onclick="InputSuggest(8)"/>
                <input type="hidden" class="btn btn-info Btn-Number" id="BtnNumber9" value="9" onclick="InputSuggest(9)"/>
            </div>

            <div class="choose row">
                <a class="btn btn-success" asp-action="TestFile" asp-controller="Home">Save game</a>
            </div>

        </div>
    </div>

</div>